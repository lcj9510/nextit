<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.free.dao.IFreeBoardDao">
	<!-- SqlSession에서 IFreeBoardDao의 구현체를 만드는데 참고되는 파일 FreeBoardDaoOracle을 대신하는 
		파일 namespace에는 IFreeBoardDao의 풀네임을 작성합니다. -->

	<!-- ; 금지 -->
	<!-- id는 메소드 parameterType = 메소드의 파라미터인데 VO의 경우 안에서 $, # 형태로 씁니다. FreeBoardVO이면 
		쿼리문에서 where bo_no=#{boNo} EL 상관없음. 형태만 비슷함. #=pstmt, $=stmt resultType = 
		메소드의 return Type인데 List의 경우 그 안에 담신 데이터 타입을 기입. select 결과를 List,set 등으로 알아서 
		맞춰서 return 해줍니다. -->

	<!-- mybatis에서 자바 static 메소드 사용하기 @클래스이름@메소드이름(파라미터의 필드이름) -->
	
	<sql id="search">
		<if test="!@org.apache.commons.lang3.StringUtils@isBlank(searchWord)">
			<choose>
				<when test='searchType == "T"'> AND bo_title like '%'||#{searchWord}||'%' </when>
				<when test='searchType == "W"'> AND bo_writer like '%'||#{searchWord}||'%' </when>
				<when test='searchType == "C"'> AND bo_content like '%'||#{searchWord}||'%' </when>
			</choose>
		</if>
		<if
			test="!@org.apache.commons.lang3.StringUtils@isBlank(searchCategory)">
			AND bo_category = #{searchCategory} 
		</if>
	</sql>
	
	<select id="getTotalRowCount" resultType="int"
		parameterType="com.study.free.vo.FreeBoardSearchVO">
		SELECT count(*)
		FROM free_board
		WHERE 1 = 1
		<include refid="search"/>
	</select>

	<select id="getBoardList" 
		resultType="com.study.free.vo.FreeBoardVO"
		parameterType="com.study.free.vo.FreeBoardSearchVO">
		<include refid="common.prePage"></include>
		SELECT to_char(bo_reg_date,'YYYY-MM-DD') AS bo_reg_date ,
		to_char(bo_mod_date,'YYYY-MM-DD') AS bo_mod_date ,
		bo_no , bo_title , bo_category ,
		bo_writer , bo_pass , bo_content ,
		bo_ip , bo_hit , bo_del_yn ,
		b.comm_nm AS bo_category_nm
		FROM free_board a, comm_code b
		WHERE a.bo_category = b.comm_cd
		<include refid="search"/>
		ORDER BY bo_no DESC              
    	<include refid="common.postPage"></include>   
	</select>

	<!-- 지금은 파라미터가 VO가 아니라 int입니다. 이럴때는 아무렇게나 써도 됩니다. -->
	<select id="getBoard" parameterType="int"
		resultType="com.study.free.vo.FreeBoardVO">
		SELECT
		to_char(bo_reg_date,'YYYY-MM-DD') AS bo_reg_date ,
		to_char(bo_mod_date,'YYYY-MM-DD') AS bo_mod_date ,
		bo_no , bo_title ,
		bo_category ,
		bo_writer , bo_pass , bo_content ,
		bo_ip , bo_hit ,
		bo_del_yn ,
		b.comm_nm AS bo_category_nm
		FROM free_board a
		,comm_code b
		WHERE a.bo_category = b.comm_cd
		AND bo_no=#{boNo}
	</select>

	<update id="increaseHit" parameterType="int">
		UPDATE free_board
		SET bo_hit = bo_hit + 1
		WHERE bo_no = #{boNo}
	</update>

	<update id="updateBoard"
		parameterType="com.study.free.vo.FreeBoardVO">
		UPDATE free_board
		SET bo_title=#{boTitle}
		,bo_category=#{boCategory}
		,bo_content=#{boContent}
		,bo_mod_date=sysdate
		WHERE bo_no=#{boNo}
	</update>

	<update id="deleteBoard"
		parameterType="com.study.free.vo.FreeBoardVO">
		UPDATE free_board
		SET bo_del_yn='Y'
		WHERE bo_no=#{boNo}
	</update>

	<insert id="insertBoard"
		parameterType="com.study.free.vo.FreeBoardVO">
		INSERT INTO free_board(
    	bo_no, bo_title, bo_category
    	, bo_writer, bo_pass, bo_content
	    , bo_ip, bo_hit, bo_reg_date
    	, bo_mod_date, bo_del_yn
		)VALUES(
		seq_free_board.nextval, #{boTitle},
		#{boCategory},
		#{boWriter}, #{boPass}, #{boContent},
		#{boIp}, 0, sysdate,
		null, 'N'
		)
	</insert>

	<select id="getBoardMap" resultType="com.study.free.vo.FreeBoardVO" parameterType="Map">
	<![CDATA[ 
	SELECT * FROM free_board
	WHERE bo_no < #{boNo}
	AND bo_title=#{boTitle}
	]]>
	</select>

<select id="getBoardAnotation" resultType="com.study.free.vo.FreeBoardVO">
	<![CDATA[ 
	SELECT * FROM free_board
	WHERE bo_no < #{boNo}
	AND bo_title=#{boTitle}
	]]>
</select>

</mapper>